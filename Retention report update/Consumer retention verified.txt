select  bac.division_id divisionId,
        bac.division_name divisionName,
        bac.teritory_id teritoryId,
        bac.teritory_name teritoryName,
        bac.route_name routeName,
        bac.customer_name consumerName,
        bac.customer_address consumerAddress,
        bac.contact_number contactNumber,
        bac.product_name reClaimBrand,
        bac.added_date reClaimDate,
        bac.LAST_ACTIVITY_DATE lastConDate,
        bac.user_name tmrId,
        bac.name tmrName,
        crs.RETENTION_STATUS verificationStatusTm,
        case when crs.role = 'DIVISION_MANAGER' then 'DM'
             when crs.role = 'TERRITORY_MANAGER' then 'TM'
             else crs.role 
        end verifiedByTm,
        crs.CHECKED_DATE verificationDateTm,
        ccvs.ADDED_DATE verificationDateSm,
        NVL(ccvs.CHECKED_STATUS,'Not_check') statusSm ,
        NVL(ccvs.CHECKED_BY_USER_ROLE,'N/A') changeVerifiedSm,
        crs.id crossCheckId        
From 
(SELECT
        id,
        added_date,
        CHECKED_DATE,
        RETENTION_STATUS,
        CHECKED_BY_BR_USER,
        CHECKED_BY_USER,
        BR_ACTIVITY_CONSUMER_ID,
        role,
        product_id
FROM
(
SELECT
        crcc.*,
        dsl.sl,
        ROW_NUMBER() OVER(PARTITION BY crcc.br_activity_consumer_id ORDER BY crcc.br_activity_consumer_id, dsl.sl) rnk
FROM
(
(
select
        crcc.id,
        to_char (cre.added_date,'dd-MON-YY')added_date,
        NVL(to_char (crcc.CHECKED_DATE,'dd-MON-YY'),'N/A')CHECKED_DATE,
        NVL(crcc.RETENTION_STATUS,'N/A')RETENTION_STATUS,
        NVL(to_char(crcc.CHECKED_BY_BR_USER),'N/A')CHECKED_BY_BR_USER,
        NVL(to_char(crcc.CHECKED_BY_USER),'N/A')CHECKED_BY_USER,
        cre.BR_ACTIVITY_CONSUMER_ID,
        NVL(ro.role,'N/A') role,
        cre.product_id
from    consumer_retention cre 
left    JOIN apptm.consumer_retention_cross_check crcc ON cre.BR_ACTIVITY_CONSUMER_ID=crcc.BR_ACTIVITY_CONSUMER_ID
left    JOIN apptm.bruser_roles brl ON crcc.CHECKED_BY_BR_USER=brl.bruser_user_id
left    JOIN apptm.role ro ON ro.id=brl.roles_id
where   cre.LAST_ACTIVITY_DATE between to_date(:fromDate,'dd-mm-yyyy') and to_date(:toDate,'dd-mm-yyyy')
)
union all
(
select
        crcc.id,
        to_char (cre.added_date,'dd-MON-YY')added_date,
        NVL(to_char (crcc.CHECKED_DATE,'dd-MON-YY'),'N/A') CHECKED_DATE,
        NVL(crcc.RETENTION_STATUS,'N/A') RETENTION_STATUS,
        NVL(to_char(crcc.CHECKED_BY_BR_USER),'N/A') CHECKED_BY_BR_USER,
        NVL(to_char(crcc.CHECKED_BY_USER),'N/A') CHECKED_BY_USER,
        cre.BR_ACTIVITY_CONSUMER_ID,
        NVL(r.role,'N/A') role,
        cre.product_id
FROM    consumer_retention cre
left    JOIN apptm.consumer_retention_cross_check crcc ON cre.BR_ACTIVITY_CONSUMER_ID=crcc.BR_ACTIVITY_CONSUMER_ID
left    JOIN apptm.users_roles ur ON crcc.CHECKED_BY_USER=ur.users_user_id
left    JOIN apptm.role r ON r.id=ur.roles_id
where   cre.LAST_ACTIVITY_DATE between to_date(:fromDate,'dd-mm-yyyy') and to_date(:toDate,'dd-mm-yyyy')
)
) crcc,
(
SELECT  1 sl, 'DIVISION_MANAGER' role FROM DUAL
UNION   ALL
SELECT  2 sl, 'TERRITORY_MANAGER' role FROM DUAL
UNION   ALL
SELECT  3 sl, 'TMS' role FROM DUAL
UNION   ALL
SELECT  4 sl, 'N/A' role FROM DUAL
) dsl
WHERE   crcc.role = dsl.role
)

where   rnk = 1
) crs 
JOIN
(
SELECT  
        v.division_id ,
        v.division_name ,
        v.teritory_id ,
        v.teritory_name ,
        v.route_id,
        v.route_name ,
        cr.br_activity_consumer_id,
        bc.CUSTOMER_NAME ,
        bcon.contact_number ,
        bc.CUSTOMER_ADDRESS ,
        p.product_name ,
        bu.user_name ,
        brep.name ,
        cr.added_date ,
        cr.LAST_ACTIVITY_DATE 
FROM    apptm.v_teritory_all v
JOIN    apptm.consumer_retention cr ON cr.route_id=v.route_id
JOIN    apptm.bractivity_consumer bc ON cr.br_activity_consumer_id=bc.id
JOIN    apptm.bractivity_contact bcon ON bc.br_activity_contact_id=bcon.id
JOIN    apptm.bruser bu ON cr.BR_USER_USER_ID=bu.user_id
JOIN    apptm.brand_representative brep ON bu.user_id=brep.BR_USER_USER_ID
JOIN    apptm.product p ON p.product_id=cr.product_id
where   cr.LAST_ACTIVITY_DATE between to_date(:fromDate,'dd-mm-yyyy') and to_date(:toDate,'dd-mm-yyyy')
AND     v.division_id like '%' || :divisionId || '%'
AND     v.teritory_id like '%' || :teritoryId || '%'
)bac
        ON crs.br_activity_consumer_id = bac.br_activity_consumer_id
LEFT    JOIN apptm.CROSS_CHECK_VERIFY_BY_SALES ccvs ON crs.id=ccvs.CON_RET_CROSS_CHE_ID
order   by bac.division_id ,bac.teritory_id ,bac.LAST_ACTIVITY_DATE ,bac.user_name,crs.CHECKED_DATE 